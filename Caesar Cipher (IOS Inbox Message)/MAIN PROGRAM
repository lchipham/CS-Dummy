#This program has 2 main parts:
#   (1) Testing Caesar Cipher (to enhance understanding of theory)
#   (2) Real-life Application (Inbox Chat)

from graphics import *
from time import sleep

def encode(userString, key):
    ori_position = 0
    output = ""
    punctuation = '''!()-[]{};:'"\,<>./?@#$%^&*_~'''
    for ch in userString:
        if ch not in punctuation:
            if ch.islower(): #lowercase boolean condition
                #26 characters in the alphabet
                #find the position of the character in the range 1-26
                ori_position = ord(ch) - ord("a")
                #position after cipher key added
                shifted_position = ori_position + key
                #spillover positions which exceed the range of 26
                remainder = shifted_position % 26
                #add that value to the first position of the alphabet
                wraparound = remainder + ord("a")
                output += chr(wraparound)
            elif ch.isupper(): #uppercase boolean condition
                ori_position = ord(ch) - ord("A")
                #encode -> shift positive key positions
                shifted_position = ori_position + key 
                remainder = shifted_position % 26
                wraparound = remainder + ord("A")
                output += chr(wraparound)
            else:
                output += ch
    return output
            
def decode(userString, key):
    ori_position = 0
    output = ""
    punctuation = '''!()-[]{};:'"\,<>./?@#$%^&*_~'''
    for ch in userString:
        if ch not in punctuation:
            if ch.islower():
                ori_position = ord(ch) - ord("a")
                #dedode -> shift negative key positions
                shifted_position = ori_position - key
                remainder = shifted_position % 26
                wraparound = remainder + ord("a")
                output += chr(wraparound)
            elif ch.isupper():
                ori_position = ord(ch) - ord("A")
                shifted_position = ori_position - key
                remainder = shifted_position % 26
                wraparound = remainder + ord("A")
                output += chr(wraparound)
            else:
                output += ch
    return output

def inputTextFile(gwin, textfile):
    inputfile = open(textfile, "r", encoding = "utf-8")
    file = inputfile.read()
    return file

def outputEncoded(gwin, file, key):
    file1 = encode(inputTextFile(gwin, file), key)
    outputfile = open("newtextfile.txt", "w", encoding = "utf-8")
    outputfile.write(file1)
    return outputfile

def outputDecoded(gwin, file, key):
    file2 = decode(inputTextFile(gwin, file), key)
    outputfile = open("newtextfile.txt", "w", encoding = "utf-8")
    outputfile.write(file2)
    return outputfile

def drawButton(gwin, pt1, pt2, words):
    button=Rectangle(pt1, pt2)
    button.setFill("white")
    button.setOutline("grey")
    button.draw(gwin)
    #Put label on button
    #compute point in the middle of button
    midpt = Point((pt1.getX()+ pt2.getX())/2, (pt1.getY()+pt2.getY())/2)
    buttonLabel = Text(midpt,words)
    buttonLabel.setSize(13)
    buttonLabel.setFill("blue")
    buttonLabel.draw(gwin)
    
def drawNoti(gwin, pt1, pt2, words):
    button=Rectangle(pt1, pt2)
    button.setFill("white")
    button.setOutline("grey")
    button.draw(gwin)
    #compute point in the middle of button
    midpt = Point((pt1.getX()+ pt2.getX())/2, (pt1.getY()+pt2.getY())/2)
    buttonLabel = Text(midpt,words)
    buttonLabel.setFace("times roman")
    buttonLabel.setFill("black")
    buttonLabel.draw(gwin)
    
def drawProceed(gwin, pt1, pt2, words):
    button=Rectangle(pt1, pt2)
    button.setFill("lavender")
    button.setOutline("grey")
    button.draw(gwin)
    midpt = Point((pt1.getX()+ pt2.getX())/2, (pt1.getY()+pt2.getY())/2)
    buttonLabel = Text(midpt,words)
    buttonLabel.setFace("times roman")
    buttonLabel.setFill("black")
    buttonLabel.draw(gwin)

def drawCircle(gwin, x, y, radius, words):
    circ = Circle(Point(x,y), radius)
    circ.setFill("pink")
    circ.setOutline("pink")
    circ.draw(gwin)
    #Label in button
    label = Text(Point(x,y),words)
    label.setFill("white")
    label.draw(gwin)

def writeText(gwin, x,y, words):
    text = Text(Point(x,y), words)
    text.setFill("black")
    text.setFace("times roman")
    text.draw(gwin)

def chatbox(gwin, pt1, pt2, words):
    chatbox=Rectangle(pt1, pt2)
    chatbox.setFill("pink")
    chatbox.setOutline("pink")
    chatbox.draw(gwin)
    #compute point in the middle of button
    midpt = Point((pt1.getX()+ pt2.getX())/2, (pt1.getY()+pt2.getY())/2)
    chat = Text(midpt,words)
    chat.setFill("black")
    chat.draw(gwin)
    
def reply(gwin, pt1, pt2, words):
    reply=Rectangle(pt1, pt2)
    reply.setFill("mint cream")
    reply.setOutline("mint cream")
    reply.draw(gwin)
    #compute point in the middle of button
    midpt = Point((pt1.getX()+ pt2.getX())/2, (pt1.getY()+pt2.getY())/2)
    rep = Text(midpt,words)
    rep.setFill("black")
    rep.draw(gwin)
    
def main():
    win = GraphWin("Caesar Cipher - Chi Pham", 500, 800)
    win.setBackground("pink")

    #IOS interface
    time = Text(Point(250,150), "09:26")
    time.setFace("times roman")
    time.setSize(36)
    time.draw(win)
    date = Text(Point(250,190), "Thursday, 18 March")
    date.setFace("times roman")
    date.setSize(20)
    date.draw(win)

    #Caesar Cipher box
    reminder_box = Rectangle(Point(150,600), Point(350, 680))
    reminder_box.setFill("white")
    reminder_box.setOutline("grey")
    reminder_box.draw(win)
    reminder_text= Text(Point(250, 640), "REMINDER\n\nLearn how Caesar Cipher works!")
    reminder_text.draw(win)
    #options
    close_box = Rectangle(Point(150,680), Point(250, 720))
    close_box.setFill("white")
    close_box.setOutline("grey")
    close_box.draw(win)
    close_text = Text(Point(200, 700), "Close")
    close_text.setFill("blue")
    close_text.draw(win)

    open_box = Rectangle(Point(250,680), Point(350, 720))
    open_box.setFill("white")
    open_box.setOutline("grey")
    open_box.draw(win)
    open_text = Text(Point(300, 700), "Open")
    open_text.setFill("blue")
    open_text.draw(win)

    #Opening Animation
    for i in range(5):
        #purpose: move box from lower center up to the direct center
        #dx = 0 because the box moves straight upward, thus no change in x 
        #dy = -50 to reflect an upward movement, since downward would be positive
        reminder_box.move(0,-50) 
        reminder_text.move(0,-50)
        close_box.move(0,-50)
        close_text.move(0,-50)
        open_box.move(0,-50)
        open_text.move(0,-50)
        sleep(0.021)
        
    #PART 1: TESTING CAESAR CIPHER
        
    #get mouse click; check if click's in Open button
    pt = win.getMouse()
    if pt.getX()>=250 and pt.getX()<=350 and pt.getY()>=440 and pt.getY()<=480:
        drawNoti(win, Point(75,285), Point(425, 515), "Caesar Cipher technique is a type of substitution cipher.\nEach letter of a given text is replaced by a letter\nsome fixed number (cipher key) of positions down the alphabet.\nFor example: with a cipher key of 1, A would be\nreplaced by B and B would become C.")
        drawProceed(win, Point(150,460), Point(350, 490),"Click to test the theory yourself")
        caesar_title = Text(Point(250,330), "CAESAR CIPHER")
        caesar_title.setFace("times roman")
        caesar_title.setSize(16)
        caesar_title.draw(win)
        
    #get mouse click and check if click's in Test Theory button    
    pt1 = win.getMouse()
    if pt1.getX()>=150 and pt1.getX()<=350 and pt1.getY()>=460 and pt1.getY()<=490:
        cover = Rectangle(Point(0,0), Point(500,800))
        cover.setFill("pink")
        cover.setOutline("pink")
        cover.draw(win)

        #INSERT TESTING PROGRAM
        #title
        title = Text(Point(250,130), "Caesar Cipher")
        title.setFace("times roman")
        title.setStyle("bold")
        title.setSize(28)
        title.draw(win)
    
        #draw instructions for users using Text object
        ask_String = Text(Point(150,220), "Enter a phrase / text file")
        ask_String.setSize(14)
        ask_String.draw(win)
        ask_key = Text(Point(350,220), "Enter a cipher key ")
        ask_key.setSize(14)
        ask_key.draw(win)

        #prompt user to click on either button
        click_prompt = Text(Point(250,330), "Click one of the options below")
        click_prompt.setSize(14)
        click_prompt.draw(win)

        #key entry object
        #Entry object
        inputboxString = Entry(Point(150,250), 15)
        inputboxString.setFill("lavender")
        inputboxString.setText("")
        inputboxString.draw(win)

        inputboxKey = Entry(Point(350,250), 8)
        inputboxKey.setFill("lavender")
        inputboxKey.setText("")
        inputboxKey.draw(win)
    
        #encode & decode buttons for user-inputted text
        drawNoti(win, Point(150,350), Point(350,380), "Encode Text")
        drawNoti(win, Point(150,380), Point(350,410), "Decode Text")

        #encode & decode buttons for user-inputted text files
        drawNoti(win, Point(150,430), Point(350,460), "Encode Text File")
        drawNoti(win, Point(150,460), Point(350,490), "Decode Text File")

        pt=win.getMouse()
        #set blank variables to be updated in loop
        show_encode = Text(Point(250,570), "")
        show_decode = Text(Point(250,570), "")
        prompt = Text(Point(250,540), "")
        prompt.setSize(14)
        prompt.draw(win)

        #while condition: point clicked is out of the "Caesae Cipher in context" box (line
        while not (pt.getX() >= 150 and pt.getX()<= 350 and pt.getY()>= 650 and pt.getY() <= 680):
            if pt.getX()>=150 and pt.getX()<=350 and pt.getY()>=350 and pt.getY()<=380:
                userString = inputboxString.getText()
                key = int(inputboxKey.getText())
                prompt.setText("Here's the encoded phrase: ")
                encode_result = encode(userString, key)
                show_encode.setText(encode_result) #update result input string
                show_encode.setStyle("bold")
                show_encode.setSize(16)
                show_encode.draw(win)     
            elif pt.getX() >= 150 and pt.getX() <= 350 and pt.getY() >= 380 and pt.getY() <= 410:
                userString = inputboxString.getText()
                key = int(inputboxKey.getText())
                prompt.setText("Here's the decoded phrase")
                decode_result = decode(userString, key)
                show_decode.setText(decode_result) #update result input string
                show_decode.setStyle("bold")
                show_decode.setSize(16)
                show_decode.draw(win)
            #Encode Text File
            elif pt.getX()>=150 and pt.getX()<=350 and pt.getY()>=430 and pt.getY()<=460:
                userString = inputboxString.getText()
                key = int(inputboxKey.getText())
                textfile = userString
                prompt.setText("Find the encoded version in newtextfile.txt")
                inputTextFile(win, textfile)
                outputEncoded(win, textfile, key)
            #Decode Text File
            elif pt.getX()>=150 and pt.getX()<=350 and pt.getY()>=460 and pt.getY()<=490:
                userString = inputboxString.getText()
                key = int(inputboxKey.getText())
                textfile = userString
                prompt.setText("Find the decoded version in newtextfile.txt")
                inputTextFile(win, textfile)
                outputDecoded(win, textfile, key)
                
            transition = Text(Point(250, 630), "Click below for the next part")
            transition.setSize(14)
            transition.draw(win)
            drawProceed(win, Point(150,650), Point(350,680), "Caesar Cipher in context")

            pt=win.getMouse() #user can click on another button
            show_encode.setText("")
            show_decode.setText("")

        #Get a mouse click; check if it's in "Caesar Cipher in context" button
        if pt.getX()>=150 and pt.getX()<=350 and pt.getY()>=650 and pt.getY()<=680:
            #move entry boxes away
            for i in range (20):
                inputboxString.move(50,50)
                inputboxKey.move(50,50)
                
            cover2 = Rectangle(Point(0,0), Point(500,800))
            cover2.setFill("pink")
            cover2.setOutline("pink")
            cover2.draw(win)

    #PART 2: INBOX MESSAGES
            
            #IOS interface
            time = Text(Point(250,150), "09:26")
            time.setFace("times roman")
            time.setSize(36)
            time.draw(win)
            date = Text(Point(250,190), "Thursday, 18 March")
            date.setFace("times roman")
            date.setSize(20)
            date.draw(win)
        
            #notification box
            drawNoti(win, Point(150,360), Point(350, 440), "ALERT\n\nCrush just sent a message")
            #options
            drawButton(win, Point(150,440), Point(250, 480), "Close")
            drawButton(win, Point(250,440), Point(350, 480), "Reply")

            #get mouse click; check if click's in Reply button
            pt=win.getMouse()
            if pt.getX()>=250 and pt.getX()<=350 and pt.getY()>=440 and pt.getY()<=480:
                cover3 = Rectangle(Point(0,0), Point(500,800))
                cover3.setFill("lavender")
                cover3.setOutline("lavender")
                cover3.draw(win)

                #Inbox name
                drawCircle(win, 50,50, 20, "C")
                chatuser = Text(Point(94,41), "Crush")
                chatuser.setSize(14)
                chatuser.setFace("times roman")
                chatuser.draw(win)
                #writeText(win, 90,35, "Crush")
                writeText(win, 105,60, "Active Now")
                
                #prompt user click
                #User clicks anywhere in the program (outside buttons) to load messages
                #after each turn of chat
                prompt = Text(Point(350,51), "load message: click purple area\nde/encode message: click buttons\nfor best result: keep default inputs")
                prompt.setFace("times roman")
                prompt.draw(win)
                win.getMouse()

                #draw chat boxes
                drawCircle(win, 50,135, 13, "C")
                chatbox(win, Point(75,100), Point(115,120), "Hey")
                chatbox(win, Point(75,125), Point(280,145), "What is it that you wanted to say?")
                win.getMouse()

                reply(win, Point(220,155), Point(425,175), "What's your birth month again?")
                reply(win, Point(330,180), Point(425,200), "in number")
                win.getMouse()
                
                drawCircle(win, 50,260, 13, "C")
                chatbox(win, Point(75,220), Point(300,240), "Huh..aren't we born in the same month?")
                #Key entry (month in number)
                inputboxKey = Entry(Point(95,260), 4)
                inputboxKey.setFill("pink")
                inputboxKey.setText("9")
                inputboxKey.draw(win)
                win.getMouse()

                #Phrase entry 1
                inputboxString = Entry(Point(370,290), 15)
                inputboxString.setText("you are really cute")
                inputboxString.setFill("light blue")
                inputboxString.draw(win)

                writeText(win, 375, 267, "invisible entry box")

                #encode button 
                reply(win, Point(310,310), Point(425,330), "i know, click here")
                writeText(win, 370, 340, "encode button")

                #Get a mouse click and then check if it is in encode button 
                pt=win.getMouse()
                userString = inputboxString.getText()
                key = int(inputboxKey.getText())
                if pt.getX()>=350 and pt.getX()<=425 and pt.getY()>=310 and pt.getY()<=330:
                    encode_result = encode(userString, key)
                    chatbox(win, Point(75,350), Point(220,370), encode_result)
                drawCircle(win, 50,390, 13, "C")
                chatbox(win, Point(75,380), Point(150,400), "What is that?")
                win.getMouse()

                #Decode button 1 
                reply(win, Point(340,420), Point(425,440), "Also click here")
                writeText(win, 385, 410, "decode button")

                reply(win, Point(300,450), Point(425,470), "What does it say...")

                #Get a mouse click; check if it's in decode button 
                pt1=win.getMouse()
                userString = encode_result
                key = int(inputboxKey.getText())
                if pt1.getX()>=340 and pt1.getX()<=425 and pt1.getY()>=420 and pt1.getY()<=440:
                    decode_result = decode(userString, key)
                    chatbox(win, Point(75,490), Point(180,510), decode_result)
                
                chatbox(win, Point(75,520), Point(115,540), ":)")

                #Phrase entry 2
                drawCircle(win, 50,560, 13, "C")
                inputboxString1 = Entry(Point(130,560), 15)
                inputboxString1.setText("r urtn hxd cxx")
                inputboxString1.setFill("pink")
                inputboxString1.draw(win)
                win.getMouse()
                
                reply(win, Point(320,580), Point(425,600), "And that means...")
                win.getMouse()
                
                drawCircle(win, 50,650, 13, "C")
                chatbox(win, Point(75,610), Point(150,630), "Click here")
                writeText(win, 115, 600, "decode button")
                chatbox(win, Point(75,640), Point(170,660), "What does is say?")

                #Get a mouse click; check if it's in the decode button 2
                pt3=win.getMouse()
                userString = inputboxString1.getText()
                key = int(inputboxKey.getText())
                if pt3.getX()>=75 and pt3.getX()<=150 and pt3.getY()>=610 and pt3.getY()<=630:
                    decode_result1 = decode(userString, key)
                    reply(win, Point(330,670), Point(425,690), decode_result1)

                reply(win, Point(385,700), Point(425,720), ":)")

                #Outro
                drawNoti(win, Point(180,750), Point(320, 770), "End of Program")
                #Get a mouse click; check if it's in End of Program button
                pt4= win.getMouse()
                if pt4.getX()>=170 and pt4.getX()<=330 and pt4.getY()>=750 and pt4.getY()<=770:
                    win.close()       
main()
